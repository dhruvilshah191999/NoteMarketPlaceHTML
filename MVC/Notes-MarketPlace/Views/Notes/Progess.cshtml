@model IPagedList<Notes_MarketPlace.Models.Note>
@using PagedList;
@using PagedList.Mvc;

@{ 
    string Base64EncodingMethod(string Data)
    {
        byte[] toEncodeAsBytes = System.Text.Encoding.UTF32.GetBytes(Data);
        string sReturnValues = System.Convert.ToBase64String(toEncodeAsBytes);
        return sReturnValues;
    }
}

<section id="progress_notes">
    <div class="container">
        <div class="progress-heading">
            <div class="row">
                <div class="col-md-4 col-12">
                    <h5>In Progress Notes</h5>
                </div>
                <div class="col-md-8 col-12">
                    <div class="progess-search float-right">
                        <form action="/Notes/Index" method="get" class="form-inline ml-auto">
                            <div class="form-group ">
                                <input type="text"
                                       class="form-control"
                                       placeholder=" &#xF002; &nbsp;&nbsp;Search"
                                       id="search"
                                       name="search"
                                       style="font-family: Open Sans,FontAwesome" />
                                <input type="submit" class="btn btn-primary " value="SUBMIT" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="progress-table table-responsive-sm">
        <table class="table">
            <thead>
                <tr>
                    <td>Added Date</td>
                    <td>@Html.ActionLink("Title", "Index", new { sortBy = ViewBag.SortTitle, search = Request.QueryString["search"], i = Request.QueryString["i"] , search2 = Request.QueryString["search2"], i2 = Request.QueryString["i2"] , sortBy2= Request.QueryString["sortBy2"] })</td>
                    <td>@Html.ActionLink("Category", "Index", new { sortBy = ViewBag.SortCategory, search = Request.QueryString["search"], i = Request.QueryString["i"], search2 = Request.QueryString["search2"], i2 = Request.QueryString["i2"], sortBy2 = Request.QueryString["sortBy2"] })</td>
                    <td>@Html.ActionLink("Status", "Index", new { sortBy = ViewBag.SortStatus, search = Request.QueryString["search"], i = Request.QueryString["i"], search2 = Request.QueryString["search2"], i2 = Request.QueryString["i2"], sortBy2 = Request.QueryString["sortBy2"] })</td>
                    <td align="center">Actions</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var notes in Model)
                {
                    <tr>
                        <td>@notes.CreatedDate.ToString("dd/MM/yyyy")</td>
                        <td>@notes.NoteTitle</td>
                        <td>@notes.Category</td>
                        <td>@notes.Status</td>
                        @if (notes.Status != "Draft")
                        {
                            <td align="center"><img src="~/images/Dashboard/eye.png" style="cursor:pointer" onclick="@("window.location.href='" + @Url.Action("Notedetails", "Notes",new {note=Base64EncodingMethod(notes.NoteId.ToString())}) + "'");"/></td>
                        }
                        else
                        {
                            <td align="center"><a href="/Notes/EditNote?noteid=@notes.NoteId"><img src="~/images/Dashboard/edit.png" /></a><i class="fas fa-trash" style="cursor:pointer" onclick="deletefunction('@notes.NoteId')"></i></td>
                            <script>
                                function deletefunction(Id) {
                                    var result = confirm("Are you sure, you want to delete this note?");
                                    if (result) {
                                        window.location.href = "/Notes/Deletenote?noteid="+Id;
                                    }
                                }
                            </script>
                        }
                    </tr>
                }
                @if (Model.Count() == 0)
                {
                    <tr>
                        <td colspan="5" align="center">No Record Found</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    </div>
</section>
<section id="pagination">
    @Html.PagedListPager(Model, i => Url.Action("Index", "Notes", new { i, search = Request.QueryString["search"], search2 = Request.QueryString["search2"], i2 = Request.QueryString["i2"], sortBy = Request.QueryString["sortBy"] ,sortBy2=Request.QueryString["sortBy2"] }), new PagedList.Mvc.PagedListRenderOptions
{
    ContainerDivClasses = null,
    LiElementClasses = new string[] { "page-item1" },
    UlElementClasses = new string[] { "pagination justify-content-center" },
    LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
    LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
    MaximumPageNumbersToDisplay = 5,
    DisplayEllipsesWhenNotShowingAllPageNumbers = false,
    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
    DisplayLinkToLastPage = PagedListDisplayMode.Never

})
</section>
